@use '../layout/breakpoints' as br;

// Reusable SCSS mixins for common patterns

// Background pattern mixin
@mixin background-pattern(
  $opacity: 0.02,
  $position1: 25% 75%,
  $position2: 75% 25%
) {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background:
      radial-gradient(
        circle at $position1,
        rgba(0, 255, 170, $opacity) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at $position2,
        rgba(0, 255, 170, $opacity) 0%,
        transparent 50%
      );
    pointer-events: none;
    z-index: -1;
  }
}

// Responsive padding mixin
@mixin responsive-padding($mobile: 2rem, $tablet: 4rem, $desktop: 5rem) {
  padding: $mobile;

  @include br.min-width(md) {
    padding: $tablet;
  }

  @include br.min-width(lg) {
    padding: $desktop;
  }
}

// Card hover effect
@mixin card-hover {
  transition: all 0.3s ease;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  }
}

// Fade in animation for staggered elements
@mixin fade-in-stagger($delay: 0.1s, $duration: 0.6s) {
  animation: fadeInUp $duration ease-out forwards;
  animation-delay: $delay;
  opacity: 0;
}
